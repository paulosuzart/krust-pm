buildscript {
    ext.kotlin_version = '0.12.200'
    ext.quasar_version = '0.6.2'

    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
  id "us.kirchmeier.capsule" version "1.0-rc1"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'maven'

mainClassName = 'org.krustpm.Main'

configurations {
    quasar
}

jar {
    baseName = 'krust-pm'
    version =  '0.1.0'
}


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repository.jetbrains.com/spek" }
}

// New entire sourceSets
sourceSets {
    main {
        kotlin {
            srcDir "src/main/kotlin"
        }
    }
    test {
        kotlin {
            srcDir "test/main/kotlin"
        }
    }
}



dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version") // New
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compile "co.paralleluniverse:quasar-actors:$quasar_version"
    compile  "co.paralleluniverse:quasar-core:$quasar_version" // No jdk8 by now
    quasar  "co.paralleluniverse:quasar-core:$quasar_version" //No jdk8 by now
    compile 'co.paralleluniverse:capsule-maven:1.0-rc1'
    compile "org.zeroturnaround:zt-exec:1.8"
    compile ('ch.qos.logback:logback-classic:1.1.3')
    compile ('com.sparkjava:spark-core:2.2')  {
      exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.ow2.asm:asm:5.0.4'
    testCompile("junit:junit")
    testCompile 'org.ow2.asm:asm:5.0.4'
    testCompile 'org.jetbrains.spek:spek:0.1-SNAPSHOT'
    compile 'com.moandjiezana.toml:toml4j:0.4.0'

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}


run {
    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}"
}

test {
    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}"
}

test.dependsOn jar

tasks.withType(Test) {
        useJUnit()
        // systemProperty 'co.paralleluniverse.fibers.verifyInstrumentation', 'true'
        // systemProperty "java.util.logging.config.file", "jul.properties"
        //systemProperty "log4j.configurationFile", "${rootProject.projectDir}/log4j.xml"
        // systemProperty "Log4jContextSelector", "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
        // systemProperty 'co.paralleluniverse.debugMode', 'true'
        systemProperty 'co.paralleluniverse.monitoring.flightRecorderLevel', '5'
        systemProperty 'co.paralleluniverse.globalFlightRecorder', 'true'
        systemProperty 'co.paralleluniverse.flightRecorderDumpFile', 'quasar.log'
        systemProperty 'co.paralleluniverse.monitoring.flightRecorderSize', '200000'

        //jvmArgs "-javaagent:${quasarJar}" // =vdmc (verbose, debug, allow monitors, check class)
        jvmArgs "-Xmx2048m"
        doLast() {
            println "file://" + getReports().getHtml().getDestination() + "/index.html"
        }
    }

task mavenCapsule(type: MavenCapsule){
  applicationClass mainClassName

  capsuleManifest {
    minJavaVersion = '1.8.0'
    jvmArgs  ["-javaagent:${configurations.quasar.iterator().next()}"]
  }
}
